<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lishun.im.dao.ImStockDao" >
  <resultMap id="BaseResultMap" type="com.lishun.im.bean.ImStock" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="inventory" property="inventory" jdbcType="BIGINT" />
    <result column="specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="inside_price" property="insidePrice" jdbcType="DOUBLE" />
    <result column="outside_price" property="outsidePrice" jdbcType="DOUBLE" />
    <result column="purchase_price" property="purchasePrice" jdbcType="DOUBLE" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="im_warehouse_id" property="imWarehouseId" jdbcType="VARCHAR" />
    <result column="im_species_id" property="imSpeciesId" jdbcType="VARCHAR" />
    <result column="im_lock" property="imLock" jdbcType="TINYINT" />
    
    <result column="promotion_endtime" property="promotionEndtime" jdbcType="TIMESTAMP" />
    <result column="promotion_price" property="promotionPrice" jdbcType="DOUBLE" />
    <result column="is_promotion" property="isPromotion" jdbcType="TINYINT" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 26 15:57:34 CST 2016.
    -->
    id, inventory, specifications, inside_price, outside_price, purchase_price, 
     update_time, create_time, im_warehouse_id, im_species_id
  </sql>
  
 
  
  <delete id="deleteById" parameterType="String" >
    delete from im_stock 
    <where>
        id=#{id}
    </where>
  </delete>
  <select id="queryById" resultMap="BaseResultMap" >
    select * from im_stock where id=#{id}
  </select>
  
  <select id="queryByIds" resultMap="BaseResultMap" >
    select * from im_stock 
    where im_warehouse_id=#{imWarehouseId} and im_species_id=#{imSpeciesId} and specifications=#{specifications}
  </select>
  <select id="queryByImWarehouseId" resultType="ImStock" >
    select * from im_stock 
    where im_warehouse_id=#{imWarehouseId}
  </select>
  <select id="queryByImSpeciesId" resultType="ImStock" >
    select * from im_stock 
    where im_species_id=#{imSpeciesId}
  </select>
  
  <insert id="insert" parameterType="com.lishun.im.bean.ImStock" >
    insert into im_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="inventory != null" >
        inventory,
      </if>
      <if test="specifications != null" >
        specifications,
      </if>
      <if test="insidePrice != null" >
        inside_price,
      </if>
      <if test="outsidePrice != null" >
        outside_price,
      </if>
      <if test="purchasePrice != null" >
        purchase_price,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="imWarehouseId != null" >
        im_warehouse_id,
      </if>
      <if test="imSpeciesId != null" >
        im_species_id,
      </if>
      
       <if test="isPromotion != null" >
        is_promotion,
      </if>
      <if test="promotionPrice != null" >
        promotion_price,
      </if>
      <if test="promotionEndtime != null" >
        promotion_endtime,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null" >
        #{inventory,jdbcType=BIGINT},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="insidePrice != null" >
        #{insidePrice,jdbcType=DOUBLE},
      </if>
      <if test="outsidePrice != null" >
        #{outsidePrice,jdbcType=DOUBLE},
      </if>
      <if test="purchasePrice != null" >
        #{purchasePrice,jdbcType=DOUBLE},
      </if>
      
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imWarehouseId != null" >
        #{imWarehouseId,jdbcType=VARCHAR},
      </if>
      <if test="imSpeciesId != null" >
        #{imSpeciesId,jdbcType=VARCHAR},
      </if>
      
       <if test="isPromotion != null" >
        #{isPromotion,jdbcType=TINYINT},
      </if>
      <if test="promotionPrice != null" >
        #{promotionPrice,jdbcType=DOUBLE},
      </if>
      <if test="promotionEndtime != null" >
        #{promotionEndtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
 
  
  <update id="update" parameterType="com.lishun.im.bean.ImStock" >
   
    update im_stock
    <set >
      <if test="inventory != null" >
        inventory = #{inventory,jdbcType=BIGINT},
      </if>
      <if test="specifications != null" >
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="insidePrice != null" >
        inside_price = #{insidePrice,jdbcType=DOUBLE},
      </if>
      <if test="outsidePrice != null" >
        outside_price = #{outsidePrice,jdbcType=DOUBLE},
      </if>
      <if test="purchasePrice != null" >
        purchase_price = #{purchasePrice,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imWarehouseId != null" >
        im_warehouse_id = #{imWarehouseId,jdbcType=VARCHAR},
      </if>
      <if test="imSpeciesId != null" >
        im_species_id = #{imSpeciesId,jdbcType=VARCHAR},
      </if>
      <if test="imLock != null" >
        im_lock = #{imLock,jdbcType=TINYINT},
      </if>
      <if test="isPromotion != null" >
        is_promotion=#{isPromotion,jdbcType=TINYINT},
      </if>
      <if test="promotionPrice != null" >
        promotion_price=#{promotionPrice,jdbcType=DOUBLE},
      </if>
      <if test="promotionEndtime != null" >
        promotion_endtime=#{promotionEndtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateInventory">
    update im_stock set
    <if test='action=="add"'>
        inventory=inventory+#{num}
    </if>
    <if test='action=="sub"'>
        inventory=inventory-#{num}
    </if>
    <where>
        id=#{id}
    </where>
  </update>
  <select id="queryList"  resultType="java.util.HashMap">
      select isk.*,iss.name issName,iwe.name iweName,iwe.id iweId,icy.name icyName,icy.id icyId from im_stock isk
        left join im_species iss on iss.id=isk.im_species_id
        left join im_warehouse iwe on iwe.id=isk.im_warehouse_id
        left JOIN im_category icy on icy.id=iss.category_id
      <where>
          <if test="keyword!=null and keyword!=''"> 
            <bind name="keyword" value="'%' + keyword + '%'" />
            and (isk.specifications like #{keyword} or iss.name like #{keyword}
             	or iwe.name like #{keyword} or icy.name like #{keyword} 
             )
          </if>
          <if test="beginTime!=null and beginTime!=''"> 
           and isk.create_time>=#{beginTime}
	      </if>
	      <if test="endTime!=null and endTime!=''"> 
	        and isk.create_time&lt;=#{endTime}
	      </if> 
	      <if test="imWarehouseId!=null and imWarehouseId!=''"> 
            and isk.im_warehouse_id=#{imWarehouseId}
          </if>
          
      </where>
      <if test="pageNo!=null and rows!=null" >
        order by isk.create_time desc limit #{pageNo},#{rows}
      </if>
   </select>
   
   <select id="queryListCount"  resultType="Long" parameterType="String">
     select count(*)  from  im_stock isk
        left join im_species iss on iss.id=isk.im_species_id
        left join im_warehouse iwe on iwe.id=isk.im_warehouse_id
        left JOIN im_category icy on icy.id=iss.category_id
     <where>
        <if test="keyword!=null and keyword!=''"> 
            <bind name="keyword" value="'%' + keyword + '%'" />
             and (isk.specifications like #{keyword} or iss.name like #{keyword}
             	or iwe.name like #{keyword} or icy.name like #{keyword} 
             )
        </if>
        <if test="beginTime!=null and beginTime!=''"> 
           and isk.create_time>=#{beginTime}
        </if>
         <if test="endTime!=null and endTime!=''"> 
           and isk.create_time&lt;=#{endTime}
        </if>
        <if test="imWarehouseId!=null and imWarehouseId!=''"> 
            and isk.im_warehouse_id=#{imWarehouseId}
          </if>  
     </where>
   </select>
</mapper>